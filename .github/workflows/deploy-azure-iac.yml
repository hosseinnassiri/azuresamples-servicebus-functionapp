name: "pipeline"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: "func-sample-dev-01"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."

jobs:
  build-and-deploy-iac:
    runs-on: ubuntu-latest
    steps:
      - name: current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')-$GITHUB_RUN_NUMBER"

      - name: checkout
        uses: actions/checkout@main

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./iac/main.bicep
          parameters: "appName=sample"
          failOnStdErr: false
          deploymentName: ${{ steps.date.outputs.date }}

      - run: echo ${{ steps.deploy.outputs.functionAppName }}

  # build-and-deploy-app:
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     - name: login with azure cli
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: setup dotnet 7.0 environment
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: "7.0"

  #     - name: dotnet build and publish
  #       shell: pwsh # For Linux, use bash
  #       run: |
  #         pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
  #         dotnet publish --configuration Release --output ./output
  #         popd

  #     - name: deploy package to azure function app
  #       uses: azure/functions-action@v1
  #       with:
  #         app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
  #         package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
